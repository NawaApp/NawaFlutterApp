name: Flutter CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Build web app
        run: flutter build web
        if: github.event_name == 'push'

      - name: Create .env file
        run: |
          echo "ANDROID_API_KEY=${{ secrets.ANDROID_API_KEY }}" >> build/web/.env
          echo "ANDROID_APP_ID=${{ secrets.ANDROID_APP_ID }}" >> build/web/.env
          echo "ANDROID_MESSAGING_SENDER_ID=${{ secrets.ANDROID_MESSAGING_SENDER_ID }}" >> build/web/.env
          echo "ANDROID_PROJECT_ID=${{ secrets.ANDROID_PROJECT_ID }}" >> build/web/.env
          echo "ANDROID_STORAGE_BUCKET=${{ secrets.ANDROID_STORAGE_BUCKET }}" >> build/web/.env
          echo "API_KEY=${{ secrets.API_KEY }}" >> build/web/.env
          echo "APP_ID=${{ secrets.APP_ID }}" >> build/web/.env
          echo "AUTH_DOMAIN=${{ secrets.AUTH_DOMAIN }}" >> build/web/.env
          echo "FIREBASE_SERVICE_ACCOUNT_NAWA_FLUTTER_APP=${{ secrets.FIREBASE_SERVICE_ACCOUNT_NAWA_FLUTTER_APP }}" >> build/web/.env
          echo "GH_PAGES_TOKEN=${{ secrets.GH_PAGES_TOKEN }}" >> build/web/.env
          echo "GH_PAGES_TOKEN_2=${{ secrets.GH_PAGES_TOKEN_2 }}" >> build/web/.env
          echo "IOS_API_KEY=${{ secrets.IOS_API_KEY }}" >> build/web/.env
          echo "IOS_APP_ID=${{ secrets.IOS_APP_ID }}" >> build/web/.env
          echo "IOS_BUNDLE_ID=${{ secrets.IOS_BUNDLE_ID }}" >> build/web/.env
          echo "IOS_MESSAGING_SENDER_ID=${{ secrets.IOS_MESSAGING_SENDER_ID }}" >> build/web/.env
          echo "IOS_PROJECT_ID=${{ secrets.IOS_PROJECT_ID }}" >> build/web/.env
          echo "IOS_STORAGE_BUCKET=${{ secrets.IOS_STORAGE_BUCKET }}" >> build/web/.env
          echo "MACOS_API_KEY=${{ secrets.MACOS_API_KEY }}" >> build/web/.env
          echo "MACOS_APP_ID=${{ secrets.MACOS_APP_ID }}" >> build/web/.env
          echo "MACOS_BUNDLE_ID=${{ secrets.MACOS_BUNDLE_ID }}" >> build/web/.env
          echo "MACOS_MESSAGING_SENDER_ID=${{ secrets.MACOS_MESSAGING_SENDER_ID }}" >> build/web/.env
          echo "MACOS_PROJECT_ID=${{ secrets.MACOS_PROJECT_ID }}" >> build/web/.env
          echo "MACOS_STORAGE_BUCKET=${{ secrets.MACOS_STORAGE_BUCKET }}" >> build/web/.env
          echo "MEASUREMENT_ID=${{ secrets.MEASUREMENT_ID }}" >> build/web/.env
          echo "MESSAGING_SENDER_ID=${{ secrets.MESSAGING_SENDER_ID }}" >> build/web/.env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> build/web/.env
          echo "PROJECT_ID=${{ secrets.PROJECT_ID }}" >> build/web/.env
          echo "STORAGE_BUCKET=${{ secrets.STORAGE_BUCKET }}" >> build/web/.env
          echo "WEB_API_KEY=${{ secrets.WEB_API_KEY }}" >> build/web/.env
          echo "WEB_APP_ID=${{ secrets.WEB_APP_ID }}" >> build/web/.env
          echo "WEB_AUTH_DOMAIN=${{ secrets.WEB_AUTH_DOMAIN }}" >> build/web/.env
          echo "WEB_MEASUREMENT_ID=${{ secrets.WEB_MEASUREMENT_ID }}" >> build/web/.env
          echo "WEB_MESSAGING_SENDER_ID=${{ secrets.WEB_MESSAGING_SENDER_ID }}" >> build/web/.env
          echo "WEB_PROJECT_ID=${{ secrets.WEB_PROJECT_ID }}" >> build/web/.env
          echo "WEB_STORAGE_BUCKET=${{ secrets.WEB_STORAGE_BUCKET }}" >> build/web/.env
          echo "WINDOWS_API_KEY=${{ secrets.WINDOWS_API_KEY }}" >> build/web/.env
          echo "WINDOWS_APP_ID=${{ secrets.WINDOWS_APP_ID }}" >> build/web/.env
          echo "WINDOWS_AUTH_DOMAIN=${{ secrets.WINDOWS_AUTH_DOMAIN }}" >> build/web/.env
          echo "WINDOWS_MEASUREMENT_ID=${{ secrets.WINDOWS_MEASUREMENT_ID }}" >> build/web/.env
          echo "WINDOWS_MESSAGING_SENDER_ID=${{ secrets.WINDOWS_MESSAGING_SENDER_ID }}" >> build/web/.env
          echo "WINDOWS_PROJECT_ID=${{ secrets.WINDOWS_PROJECT_ID }}" >> build/web/.env
          echo "WINDOWS_STORAGE_BUCKET=${{ secrets.WINDOWS_STORAGE_BUCKET }}" >> build/web/.env
        if: github.event_name == 'push'

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_PAGES_TOKEN_2 }}
          publish_dir: build/web
          publish_branch: gh-pages
        if: github.event_name == 'push'

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FB_SERVICE_ACCOUNT_NAWA_FLUTTER_APP }}
          channelId: live
          projectId: nawa-flutter-app
        if: github.event_name == 'push'
